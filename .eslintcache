[{"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\karma.conf.js":"1","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.component.spec.ts":"2","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.component.ts":"3","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.module.ts":"4","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.service.spec.ts":"5","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.service.ts":"6","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\public-api.ts":"7","C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\test.ts":"8","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\e2e\\protractor.conf.js":"9","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\e2e\\src\\app.e2e-spec.ts":"10","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\e2e\\src\\app.po.ts":"11","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\karma.conf.js":"12","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.component.html":"13","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.component.spec.ts":"14","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.component.ts":"15","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.module.ts":"16","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\environments\\environment.prod.ts":"17","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\environments\\environment.ts":"18","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\index.html":"19","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\main.ts":"20","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\polyfills.ts":"21","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\test.ts":"22"},{"size":1498,"mtime":1611093880077,"results":"23","hashOfConfig":"24"},{"size":671,"mtime":1611093868706,"results":"25","hashOfConfig":"26"},{"size":182,"mtime":1611094708305,"results":"27","hashOfConfig":"26"},{"size":244,"mtime":1611093869821,"results":"28","hashOfConfig":"26"},{"size":389,"mtime":1611093870369,"results":"29","hashOfConfig":"26"},{"size":118,"mtime":1611094718158,"results":"30","hashOfConfig":"26"},{"size":175,"mtime":1611093873161,"results":"31","hashOfConfig":"24"},{"size":814,"mtime":1611093874640,"results":"32","hashOfConfig":"24"},{"size":968,"mtime":1611093833181,"results":"33","hashOfConfig":"24"},{"size":704,"mtime":1611093831117,"results":"34","hashOfConfig":"24"},{"size":282,"mtime":1611093831818,"results":"35","hashOfConfig":"24"},{"size":1494,"mtime":1611093801409,"results":"36","hashOfConfig":"24"},{"size":25725,"mtime":1611093728767,"results":"37","hashOfConfig":"26"},{"size":978,"mtime":1611093726007,"results":"38","hashOfConfig":"26"},{"size":216,"mtime":1611094730941,"results":"39","hashOfConfig":"26"},{"size":301,"mtime":1611093719102,"results":"40","hashOfConfig":"26"},{"size":51,"mtime":1611092044868,"results":"41","hashOfConfig":"24"},{"size":662,"mtime":1611092044868,"results":"42","hashOfConfig":"24"},{"size":337,"mtime":1611093790950,"results":"43","hashOfConfig":"24"},{"size":380,"mtime":1611093792247,"results":"44","hashOfConfig":"24"},{"size":2824,"mtime":1611093794080,"results":"45","hashOfConfig":"24"},{"size":786,"mtime":1611093796695,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":14,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t0ha2s",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3c5ycv",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\karma.conf.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.component.spec.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.component.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.module.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.service.spec.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\lib\\limble-tree.service.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\public-api.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\limble-tree\\src\\test.ts",["109"],"// This file is required by karma.conf.js and loads recursively all the .spec and framework files\n\nimport \"zone.js/dist/zone\";\nimport \"zone.js/dist/zone-testing\";\nimport { getTestBed } from \"@angular/core/testing\";\nimport {\n   BrowserDynamicTestingModule,\n   platformBrowserDynamicTesting\n} from \"@angular/platform-browser-dynamic/testing\";\n\ndeclare const require: {\n   context(\n      path: string,\n      deep?: boolean,\n      filter?: RegExp\n   ): {\n      keys(): string[];\n      <T>(id: string): T;\n   };\n};\n\n// First, initialize the Angular testing environment.\ngetTestBed().initTestEnvironment(\n   BrowserDynamicTestingModule,\n   platformBrowserDynamicTesting()\n);\n// Then we find all the tests.\nconst context = require.context(\"./\", true, /\\.spec\\.ts$/);\n// And load the modules.\ncontext.keys().map(context);\n","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\e2e\\protractor.conf.js",["110"],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\e2e\\src\\app.e2e-spec.ts",["111"],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\e2e\\src\\app.po.ts",["112"],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\karma.conf.js",["113"],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.component.html",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.component.spec.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.component.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\app\\app.module.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\environments\\environment.prod.ts",["114"],"export const environment = {\n  production: true\n};\n","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\environments\\environment.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\index.html",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\main.ts",["115"],"import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n   enableProdMode();\n}\n\nplatformBrowserDynamic()\n   .bootstrapModule(AppModule)\n   .catch((err) => console.error(err));\n","C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\polyfills.ts",[],"C:\\Users\\admin\\Documents\\git\\libs\\projects\\sandbox\\src\\test.ts",["116"],"// This file is required by karma.conf.js and loads recursively all the .spec and framework files\n\nimport \"zone.js/dist/zone-testing\";\nimport { getTestBed } from \"@angular/core/testing\";\nimport {\n   BrowserDynamicTestingModule,\n   platformBrowserDynamicTesting\n} from \"@angular/platform-browser-dynamic/testing\";\n\ndeclare const require: {\n   context(\n      path: string,\n      deep?: boolean,\n      filter?: RegExp\n   ): {\n      keys(): string[];\n      <T>(id: string): T;\n   };\n};\n\n// First, initialize the Angular testing environment.\ngetTestBed().initTestEnvironment(\n   BrowserDynamicTestingModule,\n   platformBrowserDynamicTesting()\n);\n// Then we find all the tests.\nconst context = require.context(\"./\", true, /\\.spec\\.ts$/);\n// And load the modules.\ncontext.keys().map(context);\n",{"ruleId":"117","severity":2,"message":"118","line":4,"column":1,"nodeType":"119","messageId":"120","endLine":4,"endColumn":7},{"ruleId":"121","severity":2,"message":"122","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":34},{"ruleId":"117","severity":2,"message":"125","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":17},{"ruleId":"121","severity":2,"message":"122","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":42},{"ruleId":"117","severity":2,"message":"125","line":10,"column":10,"nodeType":"119","messageId":"120","endLine":10,"endColumn":17},{"ruleId":"121","severity":2,"message":"122","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":48},{"ruleId":"117","severity":2,"message":"125","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":17},{"ruleId":"121","severity":2,"message":"122","line":12,"column":10,"nodeType":"123","messageId":"124","endLine":12,"endColumn":35},{"ruleId":"117","severity":2,"message":"125","line":12,"column":10,"nodeType":"119","messageId":"120","endLine":12,"endColumn":17},{"ruleId":"121","severity":2,"message":"122","line":13,"column":10,"nodeType":"123","messageId":"124","endLine":13,"endColumn":64},{"ruleId":"117","severity":2,"message":"125","line":13,"column":10,"nodeType":"119","messageId":"120","endLine":13,"endColumn":17},{"ruleId":"121","severity":2,"message":"122","line":28,"column":15,"nodeType":"123","messageId":"124","endLine":28,"endColumn":30},{"ruleId":"117","severity":2,"message":"125","line":28,"column":15,"nodeType":"119","messageId":"120","endLine":28,"endColumn":22},{"ruleId":"117","severity":2,"message":"126","line":28,"column":36,"nodeType":"119","messageId":"120","endLine":28,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"127"},{"ruleId":null,"fatal":true,"severity":2,"message":"128"},{"ruleId":null,"fatal":true,"severity":2,"message":"129"},{"ruleId":null,"fatal":true,"severity":2,"message":"130"},{"ruleId":null,"fatal":true,"severity":2,"message":"131"},{"ruleId":null,"fatal":true,"severity":2,"message":"132"},{"ruleId":"133","severity":2,"message":"134","line":13,"column":20,"nodeType":"123","messageId":"135","endLine":13,"endColumn":38,"fix":"136"},{"ruleId":null,"fatal":true,"severity":2,"message":"137"},"no-undef","'module' is not defined.","Identifier","undef","@typescript-eslint/no-require-imports","A `require()` style import is forbidden.","CallExpression","noRequireImports","'require' is not defined.","'__dirname' is not defined.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\limble-tree\\src\\test.ts.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\sandbox\\e2e\\protractor.conf.js.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\sandbox\\e2e\\src\\app.e2e-spec.ts.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\sandbox\\e2e\\src\\app.po.ts.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\sandbox\\karma.conf.js.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\sandbox\\src\\environments\\environment.prod.ts.\nThe file must be included in at least one of the projects provided.","@typescript-eslint/no-confusing-void-expression","Returning a void expression from an arrow function shorthand is forbidden. Please add braces to the arrow function.","invalidVoidExprArrow",{"range":"138","text":"139"},"Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: projects\\sandbox\\src\\test.ts.\nThe file must be included in at least one of the projects provided.",[359,377],"{ console.error(err); }"]